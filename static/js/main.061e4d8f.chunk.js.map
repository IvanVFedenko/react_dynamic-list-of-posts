{"version":3,"sources":["Get.js","User.js","Comment.js","CommentsList.js","PostList.js","App.js","index.js"],"names":["API_URL","getFromServer","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","responsePosts","posts","responseComments","comments","responseUser","users","PostsWithUserAndComments","wrap","_context","prev","next","fetch","concat","sent","json","map","post","objectSpread","userData","find","user","id","userId","userComments","filter","comment","postId","abrupt","stop","apply","this","arguments","User","react_default","createElement","className","name","username","email","Comment","commentData","key","body","CommentsList","state","commentListIsOpen","handleClick","_this","setState","prevState","props","type","onClick","src_Comment","React","Component","PostList","loadedPosts","title","src_User_0","src_CommentsList","App","postTemplate","isLoaded","isLoading","handleLoad","setTimeout","toConsumableArray","handleInputSearch","event","value","target","toLowerCase","includes","trim","placeholder","onChange","src_PostList","hidden","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.061e4d8f.chunk.js","sourcesContent":["const API_URL = ' https://jsonplaceholder.typicode.com';\n\nconst getFromServer = async() => {\n  const responsePosts = await fetch(`${API_URL}/posts`);\n  const posts = await responsePosts.json();\n\n  const responseComments = await fetch(`${API_URL}/comments`);\n  const comments = await responseComments.json();\n\n  const responseUser = await fetch(`${API_URL}/users`);\n  const users = await responseUser.json();\n\n  const PostsWithUserAndComments = posts.map((post) => ({\n    ...post,\n    userData: users.find(user => user.id === post.userId),\n    userComments: comments.filter(comment => post.id === comment.postId),\n\n  })\n  );\n  return PostsWithUserAndComments;\n};\n\nexport default getFromServer;\n","import React from 'react';\nimport './User.css';\n\nconst User = ({ userData }) => (\n  <div className=\"user\">\n    <span className=\"user_name\">\n      {userData.name}, the &nbsp;\n    </span>\n    <span className=\"user_nickname\">\n      (\n      {userData.username}\n      )\n    </span>\n    <div className=\"user_email\">\n      {userData.email}\n    </div>\n  </div>\n);\n\nexport default User;\n","import React from 'react';\nimport './comment.css';\n\nconst Comment = ({ commentData }) => (\n  <div>\n    {commentData.map(comment => (\n      <div className=\"comment\" key={comment.id}>\n        <p className=\"comment_name\">{comment.name}</p>\n        <p className=\"comment_body\">{comment.body}</p>\n        <p className=\"comment_email\">{comment.email}</p>\n      </div>\n    ))\n    };\n  </div>\n);\n\nexport default Comment;\n","import React from 'react';\nimport Comment from './Comment';\nimport './commentlist.css';\n\nclass CommentsList extends React.Component {\n  state = {\n    commentListIsOpen: false,\n  }\n\n  handleClick = () => {\n    this.setState(prevState => ({\n      commentListIsOpen: prevState.commentListIsOpen ? false : true,\n    }));\n  };\n\n  render() {\n    const { commentData } = this.props;\n    return (\n      <div>\n        <button\n          className=\"commentlist_load-buttom\"\n          type=\"button\"\n          onClick={this.handleClick}\n        >\n          {!this.state.commentListIsOpen ? 'Show comments' : 'Hide comments'}\n        </button>\n        {this.state.commentListIsOpen && <Comment commentData={commentData} /> }\n      </div>\n    );\n  }\n}\n\nexport default CommentsList;\n","import React from 'react';\nimport User from './User';\nimport './Postlist.css';\nimport CommentsList from './CommentsList';\n\nconst PostList = ({ loadedPosts }) => (\n\n  <div>\n    {loadedPosts.map(post => (\n      <div className=\"postlist_item\" key={post.id}>\n        <div className=\"postlist_title\">{post.title} </div>\n        <div className=\"postlist_body\">{post.body} </div>\n        <div><User userData={post.userData} /></div>\n        <div><CommentsList commentData={post.userComments} /></div>\n      </div>\n    ))};\n  </div>\n);\n\nexport default PostList;\n","import React from 'react';\nimport './App.css';\nimport getFromServer from './Get';\nimport PostList from './PostList';\n\nclass App extends React.Component {\n  state = {\n    loadedPosts: [],\n    postTemplate: [],\n    isLoaded: false,\n    isLoading: false,\n  };\n\nhandleLoad = async() => {\n  this.setState({\n    isLoading: true,\n  });\n  const PostsWithUserAndComments = await getFromServer();\n  setTimeout(() => {\n    this.setState({\n      loadedPosts: [...PostsWithUserAndComments],\n      postTemplate: [...PostsWithUserAndComments],\n      isLoaded: true,\n    });\n  }, 1000);\n};\n\nhandleInputSearch = (event) => {\n  const { value } = event.target;\n  this.setState (state => ({\n    loadedPosts: state.postTemplate\n      .filter((post) => {\n        return (post.title && post.body).toLowerCase()\n          .includes(value\n            .toLowerCase()\n            .trim());\n      }),\n  }));\n};\n\nrender() {\n  if (!this.state.isLoaded) {\n    return (\n      <button\n        className=\"app_load-button\"\n        type=\"button\"\n        onClick={this.handleLoad}\n        hidden={this.state.isLoaded}\n      >\n        {this.state.isLoading ? 'Loading...' : 'Load'}\n      </button>\n    );\n  }\n  return (\n    <div className=\"app\">\n      <div>\n        <label>\n          <input\n            type=\"text\"\n            placeholder=\"Search post by body or title...\"\n            onChange={this.handleInputSearch}\n            className=\"app_search-input\"\n          />\n        </label>\n      </div>\n      <PostList loadedPosts={this.state.loadedPosts} />\n    </div>\n  );\n}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}